% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IO_databases.R
\name{dbExecute2}
\alias{dbExecute2}
\title{Execute a SQL statement on a database connection with safeguards}
\usage{
dbExecute2(con, SQL, verbose = FALSE, repeats = 10L, sleep_s = 5,
  seed = NA)
}
\arguments{
\item{con}{A \linkS4class{DBIConnection} or \linkS4class{SQLiteConnection} object.}

\item{SQL}{A character string or vector of character strings. The SQL statement(s) to
execute on \code{con}. If \code{SQL} is a vector of character strings, then the
loop across individual executions is wrapped in a transaction.}

\item{verbose}{A logical value.}

\item{repeats}{An integer value. The maximum number of failed attempts to execute the
\code{SQL} statement(s) if the database is locked.}

\item{sleep_s}{A numeric value. The average number to sleep before attempting to
execute the \code{SQL} statement(s) if the database was locked.}

\item{seed}{An R object. Passed to \code{\link{set.seed}} if not \code{NA}.}
}
\value{
A logical value. \code{TRUE} if the execution of the \code{SQL} statement(s)
  did not error out.
}
\description{
A wrapper around \code{\link[DBI]{dbExecute}} that catches errors and attempts
to execute the SQL statement up to \code{repeats} before giving up if the database
was locked.
}
\seealso{
\code{\link[DBI]{dbExecute}}
}
